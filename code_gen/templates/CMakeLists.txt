## This file was generated by $generator from $template

set(CMAKE_CXX_STANDARD 11)

project(anari_library_$namespace LANGUAGES CXX)

if(CMAKE_VERSION VERSION_GREATER_EQUAL "3.12")
  find_package(Python3 REQUIRED COMPONENTS Interpreter)

  add_custom_target(generate_$namespace)

  add_custom_target(generate_$namespace_objects
    COMMAND ${Python3_EXECUTABLE} ${ANARI_JSON_PATH}/generate_debug_objects.py
      --json ${ANARI_JSON_PATH}
      --device $device_json
      --prefix $prefix
      --namespace $namespace
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    DEPENDS $device_json
  )

  add_custom_target(generate_$namespace_queries
    COMMAND ${Python3_EXECUTABLE} ${ANARI_JSON_PATH}/generate_queries.py
      --json ${ANARI_JSON_PATH}
      --device $device_json
      --prefix $prefix
      --namespace $namespace
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    DEPENDS $device_json
  )

  add_dependencies(generate_$namespace
    generate_$namespace_objects
    generate_$namespace_queries)

  add_dependencies(generate_all generate_$namespace)
endif()

add_library(${PROJECT_NAME} SHARED
  $prefixDevice.cpp
  $prefixObjects.cpp
  $prefixArrayObjects.cpp
  $prefixFrameObject.cpp
  $prefixDeviceFactories.cpp
  $prefixString.cpp
  $prefixQueries.cpp
  $prefixDebugFactory.cpp
)

target_include_directories(${PROJECT_NAME}
PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}>
)

target_link_libraries(${PROJECT_NAME}
PUBLIC
  anari
  anari_utilities
  anari_library_debug
)

install(TARGETS ${PROJECT_NAME}
  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
)
